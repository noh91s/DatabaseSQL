트랜잭션(Transaction)이란? -> spring boot JPA @ Transanctional

- 트랜잭션은 데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 수행되어야할 일련의 연산들
- 트랜잭션은 작업의 완전성을 보장 , 작업 단위 -> 현금 인출기
- 트랜잭션은 select, update, insert, delete와 같은 연산을 수행하여 데이터베이스의 상태를 변화 시키는 작업의 단위다

트랜잭션의 특징(ACID)
- Atomicity(원자성)
 트랜잭션이 데이터베이스에 모두 반영되던지, 아니면 전혀 반영 되지 않아야 한다
 트랜잭션 내의 모든 명령은 반드시 완벽히 수행되어야 하면, 모두가 완벽히 수행되지 않고 어느 하나라도 오류가 발생하면 트랜잭션 전부가 취소되어야한다
- Consistency(일관성)
 트랜잭션의 작업 처리 결과가 항항 일관성이 있어야한다
 시스템이 가지고 있는 고정요소는 트랜잭션 수행 전과 수행 완료 후의 상태가 같아야한다
- Isolation(독립성)
 둘 이상의 트랜잭션이 동시에 실행되고 있을 경우 어떤 하나의 트랜잭션이라도 다른 트랜잭션의 연산에 끼어들수 없다
 수행 중인 트랜잭션은 완전히 완료될 때까지 다른 트랜잭션에서 수행 결과를 참조 할 수 없다
- Durability(지속성)
 트랜잭션이 성공적으로 완료되었을 경우, 결과는 영구적으로 반영되어야 한다 -> commit -> 실행 결과를 DB반영

TCL(Transaction Controller Lauguage) : 트랜잭션 제어어
데이터의 일관성, 동시발생을 보장
commit
rollback
savepoint -> 취소지점
 
트랜잭션(Transaction) : 작업 하나의 단위
commit -> 작업 확정
rollback -> 작업 취소

트랜잭션의 상태 -> 시작 -> dhksfy
1. 활동 상태 : 트랜잭션이 수행을 시작하여 현재 실행되는 상태
2. 부분완료 상태 : 트랜잭션에서 마지막 명령이 실행된 직후의 상태 즉, 트랜잭션의 모든 연산이 처리된 상태 -> commit 직전
3. 실패 상태 : 오류 인해 장애가 발생, 트랜잭션의 수행이 중단된 상태
4. 완료 상태 : 트랜잭션이 성공적으로 완료된 상태를 의미, 최종결과를 데이터베이스에 반영 -> commit 직후
5. 철회 상태 : 트랜잭션 수행이 실패하여 Rollback연산을 실행한 상태, 수행된 트랜잭션 연산을 모두 취소하고 트랜잭션이 수행되기 전의 상태로 복귀

자동 commit
1. DDL -> create, drop, alter
2. DCL -> grant, revoke

commit -- commit 수행 후에는 rollback이 불가능 하다
DML -> insert, update, delete -> commit을 수행 해야 DB반영 된다
