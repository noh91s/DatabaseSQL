서브쿼리(subquery) -> 하나의 SQL문에 또다른 SQL문 작성
JOIN
1. 하나의 쿼리안에 괄호()로 감싸서 사용
2. 서브쿼리 Order by를 사용하지 못한다

서브쿼리 사용이 가능한곳
select
from
where
having
order by
insert의 values절
update의 set절

다중 테이블 검색(조인, 서브쿼리, 집합연산자)
데이터를 분해하는 방법으로 정규화기법 사용 통합하는 기법으로 다중 테이블에 대한 검색이 사용
1) Join(조인) JOIN(INNER, OUTER, CROSS, SELF JOIN) inner join

1. 결합을 의 미 -> 테이블과 테이블이 결합(2개 이상의 테이블 결합)
2. 관계형데이터베이스에서의 조인의 교집합 결과를 가지는 결합방법을 의미
3. 두테이블의 공통값을 이용하여 컬럼을 조합 하는 수단
4. 논리적조인과 물리적조인이 있음
5. 내부조인(inner join)과 외부조인(outer join)이 있음 Sub Query(서브쿼리)

조인(JOIN)을 쓰면 두 개의 테이블을 엮어서 원하는 데이터를 추출할 수 있다
1. 조인은 두 개의 테이블을 서로 묶어서 하나의 결과를 만들어 내는 것을 말한다
2. INNER JOIN(내부조인)은 두 테이블을 조인할 때, 두 테이블에 모두 지정한 열의 데이터가 있어야한다
3. OUTER JOIN(외부조인)은 두 테이블을 조인할 때ㅡ 1개의 테이블에만 데이터가 있어도 결과가 나온다
4. CROSS JOIN(상호조인)은 한쪽 테이블의 모든 행과 다른 쪽 테이블의 모든 행을 조인하는 기능이다
5. SELF JOIN(자체조인)은 자신이 자신과 조인한다는 의미로, 1개의 테이블을 사용한다

INNER JOIN (내부조인)
두 테이블을 연결할 때 가장많이 사용하는 것이 내부 조인 입니다.
그냥 조인이라고 부르면 내부 조인을 의미합니다
SELECT <열 목록> FROM 테이블1 INNER JOIN 테이블2 ON <조인될 조건> [WHERE 검색 조건]
INNER JOIN을 JOIN이라고만 써도 INNER_JOIN으로 인식합니다

select m.userId, b.board_no from member0626_1 m join board0626_2 b on m.userId=b.board_title;

select m.userId, b.board_no 
-- 테이블1 과 테이블2 조인(내부조인, inner join)
from member0626_1 m inner join board0626_2 b 
-- 두 테이블이 테이블1의 userId 와 테이블2의 borad_title이 일치 하게 조회
on m.userId=b.board_title;


테이블 간의 연관 관계 주테이블 1  연관테이블 M
-> 외래키 설정 FK 1: N 주키
-> inner join (JOIN) -> 일반적인 JOIN
두테이블은 연관관계에 있다.


OUTER JOIN(외부조인)
-> 외부조인은 한쪽에만 데이터가 있어도 결과가 나옵니다
t1, t2 테이블 외부조인
select <열목록>
from t1 <LEFT | RIGHT | FULL> outer join t2
on <조인될 조건>
where 조건;

select <열목록>
from 테이블1 left OUTER JOIN 테이블 2 on <조인될 조건> where 조건;

LEFT OUTER JOIN : 왼쪽 테이블의 모든 값이 출력되는 조인
RIGHT OUTER JOIN : 오른쪽 테이블의 모든 값이 출력되는 조인
FULL OUTER JOIN : 왼쪽 또는 오른쪽 테이블의 모든 값이 출력되는 조인

1:N board0626 board_writer(FK) 외래키 서정
@OneToMany -> 1:다(1:N) 관리자 테이블 -> 상품등록테이블
@OneToOne -> 일대일 1:1 교수(하나) <-> 과목(하나)
@ManyToOne -> 다대일 N:1 상품등록테이블 -> 관리자테이블

CROSS JOIN(상호조인)
한쪽 테이블의 모든 행과 다른 쪽 테이블의 모든 행을 조인시키는 기능입니다
상호 조인 결과의 전체 행 개수는 두 테이블의 각 행의 개수를 곱한 수 만큼 됩니다
카티션 곱(CARTESIAN PRODUCT)이라고도 합니다

SELF JOIN(자체 조인) -> chat bot(Web Sochet, Stom, Komoran, Komoran+ Open Api
자체 조인은 자기 자신과 조인하므로 1개의 테이블을 사용합니다
별도의 문법이 있는 것은 아니고 1개로 조인하면 자체조인이 됩니다

select <열목록>
from <테이블> 별칭A
inner join <테이블> 별칭B
on <조인될 조건>
[WHERE 검색 조건]


-- 다중 테이블 조회
1. 서브쿼리	-> 쿼리 안에 쿼리()
2. JOIN		-> 내부조인(inner join), 외부조인(outer join -> left, right, cross, full), self
3. 집합연산

1. 등록된 회원만 게시글을 등록 한다

*.do -> 
페이지 -> 요청 URL	
/index.do -> index.jsp	메인페이지
/joinView.do -> join.jsp	회원가입페이지
	/joinOk.do name,password,email DTO ->
/writeView.do -> write.jsp	게시글 등록페이지
	/writeOk.do board_title,board_content,board_writer DTO ->
- 회원등록성공 -> /writeView.do
- 회원등록실패 -> joinFail.jsp
- 게시글등록실패 -> writeFail.jsp

get -> 브라우저
a태그로 서버로 URL요청 -> GET방식
브라우저의 주소로 서버로 URL요청 -> GET방식
form의 기본서버 전송방식(method) -> GET방식

		컴파일		실행
JAVA	->	.class		.exe
JSP 	-> 	.class		.exe -> HTML리턴	


집합연산
1. 두테이블 연산에 집합연산자를 사용하는 방식
2. 여러 질의 결과를 연결하여 하나로 결합하는 방식을 사용
3. UNION : 합집합(중복행제거)
4. UNION ALL :  합집합(중복행제거하지않음)
5. INTERSECTION : 교집합(중복행제거) -> 오라클 intersect
6. EXCEPT(MINUS) : 차집합(중복행제거) -> 오라클 minus